{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0a13122cf725fc4188b1837262b9695e5f90279b8d812aa39b65185cd1664e96",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1048459",
    "logsBloom": "0x
    "blockHash": "0x1bc54eb5450dec3383be3f48185f7eaab2fcdbea4c2cfd49ae754d399dd0552e",
    "transactionHash": "0x0a13122cf725fc4188b1837262b9695e5f90279b8d812aa39b65185cd1664e96",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1048459",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "fce459e5b4e5591b95afa62dd8280b27",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"0xup\",\"kind\":\"dev\",\"methods\":{},\"title\":\"\\u4f17\\u7b79\\u5408\\u7ea6\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A contract for crowd funding\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Error Codes\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title \\u4f17\\u7b79\\u5408\\u7ea6\\n * @author 0xup\\n * @notice A contract for crowd funding\\n */\\ncontract FundMe {\\n    // PriceConverter\\u4e3a\\u81ea\\u5b9a\\u4e49\\u7684\\u4e00\\u4e2a\\u5e93\\uff0c\\u7528\\u5728uint256\\u8fd9\\u4e2a\\u7c7b\\u578b\\u4e0a\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // \\u6784\\u9020\\u5668\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        // \\u5229\\u7528chainlink\\u7684\\u5582\\u4ef7\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // \\u6e05\\u7a7a\\u6570\\u7ec4\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        // \\u8bfb\\u8fdbmemory\\u4e2d\\u4f1a\\u66f4\\u52a0\\u8282\\u7701gas\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // view\\u3001pure\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0xc9fa721e4e6c41fb7fe00b89969a23f31d52bf74dbe78b2d7ab509bf2ae3473e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // \\u83b7\\u53d6\\u5f53\\u524d\\u7684\\u4ef7\\u683c\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xd8fb9e619d6546531367401dac7ce3e75606e8c43263b50dbf514a7fe1901d81\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200131f3803806200131f833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c611199620001866000396000818161038a015281816105d901528181610629015261081f01526111996000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101545780639e87a5cd1461017f578063b60d4288146101aa578063be2693f0146101b45761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a592146101295761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ad1565b6102f8565b6040516100cc9190610b17565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b5e565b610340565b6040516101099190610b9a565b60405180910390f35b34801561011e57600080fd5b50610127610388565b005b34801561013557600080fd5b5061013e6105c8565b60405161014b9190610b17565b60405180910390f35b34801561016057600080fd5b506101696105d5565b6040516101769190610b9a565b60405180910390f35b34801561018b57600080fd5b506101946105fd565b6040516101a19190610c14565b60405180910390f35b6101b26101be565b005b6101bc610627565b005b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108eb90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c8c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028c9190610cdb565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061035657610355610d31565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b85760006001828154811061043357610432610d31565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b090610d60565b915050610410565b50600067ffffffffffffffff8111156104d4576104d3610da9565b5b6040519080825280602002602001820160405280156105025781602001602082028036833780820191505090505b50600190805190602001906105189291906109c7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053f90610e09565b60006040518083038185875af1925050503d806000811461057c576040519150601f19603f3d011682016040523d82523d6000602084013e610581565b606091505b50509050806105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90610e6a565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ac576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561073057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e6575b5050505050905060005b81518110156107ba57600082828151811061075857610757610d31565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107b290610d60565b91505061073a565b50600067ffffffffffffffff8111156107d6576107d5610da9565b5b6040519080825280602002602001820160405280156108045781602001602082028036833780820191505090505b506001908051906020019061081a9291906109c7565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161086190610e09565b60006040518083038185875af1925050503d806000811461089e576040519150601f19603f3d011682016040523d82523d6000602084013e6108a3565b606091505b50509050806108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de90610e6a565b60405180910390fd5b5050565b6000806108f783610927565b90506000670de0b6b3a764000085836109109190610e8a565b61091a9190610f13565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097057600080fd5b505afa158015610984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a89190610fd1565b5050509150506402540be400816109bf919061104c565b915050919050565b828054828255906000526020600020908101928215610a40579160200282015b82811115610a3f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109e7565b5b509050610a4d9190610a51565b5090565b5b80821115610a6a576000816000905550600101610a52565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9e82610a73565b9050919050565b610aae81610a93565b8114610ab957600080fd5b50565b600081359050610acb81610aa5565b92915050565b600060208284031215610ae757610ae6610a6e565b5b6000610af584828501610abc565b91505092915050565b6000819050919050565b610b1181610afe565b82525050565b6000602082019050610b2c6000830184610b08565b92915050565b610b3b81610afe565b8114610b4657600080fd5b50565b600081359050610b5881610b32565b92915050565b600060208284031215610b7457610b73610a6e565b5b6000610b8284828501610b49565b91505092915050565b610b9481610a93565b82525050565b6000602082019050610baf6000830184610b8b565b92915050565b6000819050919050565b6000610bda610bd5610bd084610a73565b610bb5565b610a73565b9050919050565b6000610bec82610bbf565b9050919050565b6000610bfe82610be1565b9050919050565b610c0e81610bf3565b82525050565b6000602082019050610c296000830184610c05565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c76601b83610c2f565b9150610c8182610c40565b602082019050919050565b60006020820190508181036000830152610ca581610c69565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce682610afe565b9150610cf183610afe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2657610d25610cac565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6b82610afe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9e57610d9d610cac565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610df3600083610dd8565b9150610dfe82610de3565b600082019050919050565b6000610e1482610de6565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e54600b83610c2f565b9150610e5f82610e1e565b602082019050919050565b60006020820190508181036000830152610e8381610e47565b9050919050565b6000610e9582610afe565b9150610ea083610afe565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed957610ed8610cac565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1e82610afe565b9150610f2983610afe565b925082610f3957610f38610ee4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6381610f44565b8114610f6e57600080fd5b50565b600081519050610f8081610f5a565b92915050565b6000819050919050565b610f9981610f86565b8114610fa457600080fd5b50565b600081519050610fb681610f90565b92915050565b600081519050610fcb81610b32565b92915050565b600080600080600060a08688031215610fed57610fec610a6e565b5b6000610ffb88828901610f71565b955050602061100c88828901610fa7565b945050604061101d88828901610fbc565b935050606061102e88828901610fbc565b925050608061103f88828901610f71565b9150509295509295909350565b600061105782610f86565b915061106283610f86565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110a1576110a0610cac565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110de576110dd610cac565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111b5761111a610cac565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115857611157610cac565b5b82820290509291505056fea2646970667358221220c587eba26845acf87443794b4589f464ab7fdf3184c034574a3c63f48b01e2c064736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101545780639e87a5cd1461017f578063b60d4288146101aa578063be2693f0146101b45761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a592146101295761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ad1565b6102f8565b6040516100cc9190610b17565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b5e565b610340565b6040516101099190610b9a565b60405180910390f35b34801561011e57600080fd5b50610127610388565b005b34801561013557600080fd5b5061013e6105c8565b60405161014b9190610b17565b60405180910390f35b34801561016057600080fd5b506101696105d5565b6040516101769190610b9a565b60405180910390f35b34801561018b57600080fd5b506101946105fd565b6040516101a19190610c14565b60405180910390f35b6101b26101be565b005b6101bc610627565b005b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108eb90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c8c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028c9190610cdb565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061035657610355610d31565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104b85760006001828154811061043357610432610d31565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b090610d60565b915050610410565b50600067ffffffffffffffff8111156104d4576104d3610da9565b5b6040519080825280602002602001820160405280156105025781602001602082028036833780820191505090505b50600190805190602001906105189291906109c7565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053f90610e09565b60006040518083038185875af1925050503d806000811461057c576040519150601f19603f3d011682016040523d82523d6000602084013e610581565b606091505b50509050806105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90610e6a565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ac576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561073057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106e6575b5050505050905060005b81518110156107ba57600082828151811061075857610757610d31565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107b290610d60565b91505061073a565b50600067ffffffffffffffff8111156107d6576107d5610da9565b5b6040519080825280602002602001820160405280156108045781602001602082028036833780820191505090505b506001908051906020019061081a9291906109c7565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161086190610e09565b60006040518083038185875af1925050503d806000811461089e576040519150601f19603f3d011682016040523d82523d6000602084013e6108a3565b606091505b50509050806108e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108de90610e6a565b60405180910390fd5b5050565b6000806108f783610927565b90506000670de0b6b3a764000085836109109190610e8a565b61091a9190610f13565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097057600080fd5b505afa158015610984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a89190610fd1565b5050509150506402540be400816109bf919061104c565b915050919050565b828054828255906000526020600020908101928215610a40579160200282015b82811115610a3f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109e7565b5b509050610a4d9190610a51565b5090565b5b80821115610a6a576000816000905550600101610a52565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9e82610a73565b9050919050565b610aae81610a93565b8114610ab957600080fd5b50565b600081359050610acb81610aa5565b92915050565b600060208284031215610ae757610ae6610a6e565b5b6000610af584828501610abc565b91505092915050565b6000819050919050565b610b1181610afe565b82525050565b6000602082019050610b2c6000830184610b08565b92915050565b610b3b81610afe565b8114610b4657600080fd5b50565b600081359050610b5881610b32565b92915050565b600060208284031215610b7457610b73610a6e565b5b6000610b8284828501610b49565b91505092915050565b610b9481610a93565b82525050565b6000602082019050610baf6000830184610b8b565b92915050565b6000819050919050565b6000610bda610bd5610bd084610a73565b610bb5565b610a73565b9050919050565b6000610bec82610bbf565b9050919050565b6000610bfe82610be1565b9050919050565b610c0e81610bf3565b82525050565b6000602082019050610c296000830184610c05565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c76601b83610c2f565b9150610c8182610c40565b602082019050919050565b60006020820190508181036000830152610ca581610c69565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ce682610afe565b9150610cf183610afe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2657610d25610cac565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6b82610afe565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9e57610d9d610cac565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610df3600083610dd8565b9150610dfe82610de3565b600082019050919050565b6000610e1482610de6565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e54600b83610c2f565b9150610e5f82610e1e565b602082019050919050565b60006020820190508181036000830152610e8381610e47565b9050919050565b6000610e9582610afe565b9150610ea083610afe565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed957610ed8610cac565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1e82610afe565b9150610f2983610afe565b925082610f3957610f38610ee4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6381610f44565b8114610f6e57600080fd5b50565b600081519050610f8081610f5a565b92915050565b6000819050919050565b610f9981610f86565b8114610fa457600080fd5b50565b600081519050610fb681610f90565b92915050565b600081519050610fcb81610b32565b92915050565b600080600080600060a08688031215610fed57610fec610a6e565b5b6000610ffb88828901610f71565b955050602061100c88828901610fa7565b945050604061101d88828901610fbc565b935050606061102e88828901610fbc565b925050608061103f88828901610f71565b9150509295509295909350565b600061105782610f86565b915061106283610f86565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110a1576110a0610cac565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110de576110dd610cac565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111b5761111a610cac565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115857611157610cac565b5b82820290509291505056fea2646970667358221220c587eba26845acf87443794b4589f464ab7fdf3184c034574a3c63f48b01e2c064736f6c63430008080033",
  "devdoc": {
    "author": "0xup",
    "kind": "dev",
    "methods": {},
    "title": "众筹合约",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A contract for crowd funding",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}